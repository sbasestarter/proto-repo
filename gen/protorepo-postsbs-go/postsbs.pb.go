// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: postsbs.proto

package postsbspb

import (
	context "context"
	protorepo_share_go "github.com/sbasestarter/proto-repo/gen/protorepo-share-go"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostProtocolType int32

const (
	PostProtocolType_POST_PROTOCOL_TYPE_UNSPECIFIED PostProtocolType = 0
	PostProtocolType_POST_PROTOCOL_TYPE_MAIL        PostProtocolType = 1
	PostProtocolType_POST_PROTOCOL_TYPE_SMS         PostProtocolType = 2
)

// Enum value maps for PostProtocolType.
var (
	PostProtocolType_name = map[int32]string{
		0: "POST_PROTOCOL_TYPE_UNSPECIFIED",
		1: "POST_PROTOCOL_TYPE_MAIL",
		2: "POST_PROTOCOL_TYPE_SMS",
	}
	PostProtocolType_value = map[string]int32{
		"POST_PROTOCOL_TYPE_UNSPECIFIED": 0,
		"POST_PROTOCOL_TYPE_MAIL":        1,
		"POST_PROTOCOL_TYPE_SMS":         2,
	}
)

func (x PostProtocolType) Enum() *PostProtocolType {
	p := new(PostProtocolType)
	*p = x
	return p
}

func (x PostProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_postsbs_proto_enumTypes[0].Descriptor()
}

func (PostProtocolType) Type() protoreflect.EnumType {
	return &file_postsbs_proto_enumTypes[0]
}

func (x PostProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostProtocolType.Descriptor instead.
func (PostProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_postsbs_proto_rawDescGZIP(), []int{0}
}

type PostPurposeType int32

const (
	PostPurposeType_POST_PURPOSE_TYPE_UNSPECIFIED    PostPurposeType = 0
	PostPurposeType_POST_PURPOSE_TYPE_REGISTER       PostPurposeType = 1
	PostPurposeType_POST_PURPOSE_TYPE_LOGIN          PostPurposeType = 2
	PostPurposeType_POST_PURPOSE_TYPE_RESET_PASSWORD PostPurposeType = 3
)

// Enum value maps for PostPurposeType.
var (
	PostPurposeType_name = map[int32]string{
		0: "POST_PURPOSE_TYPE_UNSPECIFIED",
		1: "POST_PURPOSE_TYPE_REGISTER",
		2: "POST_PURPOSE_TYPE_LOGIN",
		3: "POST_PURPOSE_TYPE_RESET_PASSWORD",
	}
	PostPurposeType_value = map[string]int32{
		"POST_PURPOSE_TYPE_UNSPECIFIED":    0,
		"POST_PURPOSE_TYPE_REGISTER":       1,
		"POST_PURPOSE_TYPE_LOGIN":          2,
		"POST_PURPOSE_TYPE_RESET_PASSWORD": 3,
	}
)

func (x PostPurposeType) Enum() *PostPurposeType {
	p := new(PostPurposeType)
	*p = x
	return p
}

func (x PostPurposeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostPurposeType) Descriptor() protoreflect.EnumDescriptor {
	return file_postsbs_proto_enumTypes[1].Descriptor()
}

func (PostPurposeType) Type() protoreflect.EnumType {
	return &file_postsbs_proto_enumTypes[1]
}

func (x PostPurposeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostPurposeType.Descriptor instead.
func (PostPurposeType) EnumDescriptor() ([]byte, []int) {
	return file_postsbs_proto_rawDescGZIP(), []int{1}
}

type PostCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolType     PostProtocolType `protobuf:"varint,1,opt,name=protocol_type,json=protocolType,proto3,enum=postsbs.api.PostProtocolType" json:"protocol_type,omitempty"`
	PurposeType      PostPurposeType  `protobuf:"varint,2,opt,name=purpose_type,json=purposeType,proto3,enum=postsbs.api.PostPurposeType" json:"purpose_type,omitempty"`
	To               string           `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Code             string           `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	ExpiredTimestamp int64            `protobuf:"varint,5,opt,name=expired_timestamp,json=expiredTimestamp,proto3" json:"expired_timestamp,omitempty"`
}

func (x *PostCodeRequest) Reset() {
	*x = PostCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postsbs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCodeRequest) ProtoMessage() {}

func (x *PostCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postsbs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCodeRequest.ProtoReflect.Descriptor instead.
func (*PostCodeRequest) Descriptor() ([]byte, []int) {
	return file_postsbs_proto_rawDescGZIP(), []int{0}
}

func (x *PostCodeRequest) GetProtocolType() PostProtocolType {
	if x != nil {
		return x.ProtocolType
	}
	return PostProtocolType_POST_PROTOCOL_TYPE_UNSPECIFIED
}

func (x *PostCodeRequest) GetPurposeType() PostPurposeType {
	if x != nil {
		return x.PurposeType
	}
	return PostPurposeType_POST_PURPOSE_TYPE_UNSPECIFIED
}

func (x *PostCodeRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *PostCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostCodeRequest) GetExpiredTimestamp() int64 {
	if x != nil {
		return x.ExpiredTimestamp
	}
	return 0
}

var File_postsbs_proto protoreflect.FileDescriptor

var file_postsbs_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x11, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe7, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x62, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x70, 0x6f,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x6f, 0x0a, 0x10, 0x50, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x1e, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4d, 0x53, 0x10, 0x02, 0x2a, 0x97, 0x01, 0x0a, 0x0f, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x1d, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x24,
	0x0a, 0x20, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x03, 0x32, 0x4e, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x42, 0x53, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x62, 0x61, 0x73, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73,
	0x2d, 0x67, 0x6f, 0x3b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_postsbs_proto_rawDescOnce sync.Once
	file_postsbs_proto_rawDescData = file_postsbs_proto_rawDesc
)

func file_postsbs_proto_rawDescGZIP() []byte {
	file_postsbs_proto_rawDescOnce.Do(func() {
		file_postsbs_proto_rawDescData = protoimpl.X.CompressGZIP(file_postsbs_proto_rawDescData)
	})
	return file_postsbs_proto_rawDescData
}

var file_postsbs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_postsbs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_postsbs_proto_goTypes = []interface{}{
	(PostProtocolType)(0),            // 0: postsbs.api.PostProtocolType
	(PostPurposeType)(0),             // 1: postsbs.api.PostPurposeType
	(*PostCodeRequest)(nil),          // 2: postsbs.api.PostCodeRequest
	(*protorepo_share_go.Empty)(nil), // 3: share.api.Empty
}
var file_postsbs_proto_depIdxs = []int32{
	0, // 0: postsbs.api.PostCodeRequest.protocol_type:type_name -> postsbs.api.PostProtocolType
	1, // 1: postsbs.api.PostCodeRequest.purpose_type:type_name -> postsbs.api.PostPurposeType
	2, // 2: postsbs.api.PostSBSService.PostCode:input_type -> postsbs.api.PostCodeRequest
	3, // 3: postsbs.api.PostSBSService.PostCode:output_type -> share.api.Empty
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_postsbs_proto_init() }
func file_postsbs_proto_init() {
	if File_postsbs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_postsbs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_postsbs_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_postsbs_proto_goTypes,
		DependencyIndexes: file_postsbs_proto_depIdxs,
		EnumInfos:         file_postsbs_proto_enumTypes,
		MessageInfos:      file_postsbs_proto_msgTypes,
	}.Build()
	File_postsbs_proto = out.File
	file_postsbs_proto_rawDesc = nil
	file_postsbs_proto_goTypes = nil
	file_postsbs_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PostSBSServiceClient is the client API for PostSBSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostSBSServiceClient interface {
	PostCode(ctx context.Context, in *PostCodeRequest, opts ...grpc.CallOption) (*protorepo_share_go.Empty, error)
}

type postSBSServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPostSBSServiceClient(cc grpc.ClientConnInterface) PostSBSServiceClient {
	return &postSBSServiceClient{cc}
}

func (c *postSBSServiceClient) PostCode(ctx context.Context, in *PostCodeRequest, opts ...grpc.CallOption) (*protorepo_share_go.Empty, error) {
	out := new(protorepo_share_go.Empty)
	err := c.cc.Invoke(ctx, "/postsbs.api.PostSBSService/PostCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostSBSServiceServer is the server API for PostSBSService service.
type PostSBSServiceServer interface {
	PostCode(context.Context, *PostCodeRequest) (*protorepo_share_go.Empty, error)
}

// UnimplementedPostSBSServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPostSBSServiceServer struct {
}

func (*UnimplementedPostSBSServiceServer) PostCode(context.Context, *PostCodeRequest) (*protorepo_share_go.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostCode not implemented")
}

func RegisterPostSBSServiceServer(s *grpc.Server, srv PostSBSServiceServer) {
	s.RegisterService(&_PostSBSService_serviceDesc, srv)
}

func _PostSBSService_PostCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostSBSServiceServer).PostCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/postsbs.api.PostSBSService/PostCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostSBSServiceServer).PostCode(ctx, req.(*PostCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostSBSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "postsbs.api.PostSBSService",
	HandlerType: (*PostSBSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostCode",
			Handler:    _PostSBSService_PostCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "postsbs.proto",
}
