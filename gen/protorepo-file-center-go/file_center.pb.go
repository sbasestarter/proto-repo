// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: file_center.proto

package filecenterpb

import (
	__proto_target__go "<domain>/<namespace>/<proto-target>-go"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateFileRequest) Reset() {
	*x = UpdateFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_center_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileRequest) ProtoMessage() {}

func (x *UpdateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_center_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileRequest) Descriptor() ([]byte, []int) {
	return file_file_center_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UpdateFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdateFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUrl string `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
}

func (x *UpdateFileResponse) Reset() {
	*x = UpdateFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_center_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileResponse) ProtoMessage() {}

func (x *UpdateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_center_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileResponse.ProtoReflect.Descriptor instead.
func (*UpdateFileResponse) Descriptor() ([]byte, []int) {
	return file_file_center_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateFileResponse) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type GetKVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKVRequest) Reset() {
	*x = GetKVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_center_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVRequest) ProtoMessage() {}

func (x *GetKVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_center_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVRequest.ProtoReflect.Descriptor instead.
func (*GetKVRequest) Descriptor() ([]byte, []int) {
	return file_file_center_proto_rawDescGZIP(), []int{2}
}

func (x *GetKVRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetKVResponse) Reset() {
	*x = GetKVResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_center_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKVResponse) ProtoMessage() {}

func (x *GetKVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_center_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKVResponse.ProtoReflect.Descriptor instead.
func (*GetKVResponse) Descriptor() ([]byte, []int) {
	return file_file_center_proto_rawDescGZIP(), []int{3}
}

func (x *GetKVResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SetKVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetKVRequest) Reset() {
	*x = SetKVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_center_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKVRequest) ProtoMessage() {}

func (x *SetKVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_center_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKVRequest.ProtoReflect.Descriptor instead.
func (*SetKVRequest) Descriptor() ([]byte, []int) {
	return file_file_center_proto_rawDescGZIP(), []int{4}
}

func (x *SetKVRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetKVRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_file_center_proto protoreflect.FileDescriptor

var file_file_center_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0xe6, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x47, 0x65,
	0x74, 0x4b, 0x56, 0x12, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4b, 0x56, 0x12, 0x1c, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74,
	0x4b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x47, 0x5a,
	0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x62, 0x61, 0x73,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x72,
	0x65, 0x70, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x6f, 0x2d, 0x2d, 0x67, 0x6f, 0x2e, 0x67, 0x69, 0x74, 0x3b, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_center_proto_rawDescOnce sync.Once
	file_file_center_proto_rawDescData = file_file_center_proto_rawDesc
)

func file_file_center_proto_rawDescGZIP() []byte {
	file_file_center_proto_rawDescOnce.Do(func() {
		file_file_center_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_center_proto_rawDescData)
	})
	return file_file_center_proto_rawDescData
}

var file_file_center_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_file_center_proto_goTypes = []interface{}{
	(*UpdateFileRequest)(nil),        // 0: filecenter.api.UpdateFileRequest
	(*UpdateFileResponse)(nil),       // 1: filecenter.api.UpdateFileResponse
	(*GetKVRequest)(nil),             // 2: filecenter.api.GetKVRequest
	(*GetKVResponse)(nil),            // 3: filecenter.api.GetKVResponse
	(*SetKVRequest)(nil),             // 4: filecenter.api.SetKVRequest
	(*__proto_target__go.Empty)(nil), // 5: share.api.Empty
}
var file_file_center_proto_depIdxs = []int32{
	0, // 0: filecenter.api.FileCenter.UpdateFile:input_type -> filecenter.api.UpdateFileRequest
	2, // 1: filecenter.api.FileCenter.GetKV:input_type -> filecenter.api.GetKVRequest
	4, // 2: filecenter.api.FileCenter.SetKV:input_type -> filecenter.api.SetKVRequest
	1, // 3: filecenter.api.FileCenter.UpdateFile:output_type -> filecenter.api.UpdateFileResponse
	3, // 4: filecenter.api.FileCenter.GetKV:output_type -> filecenter.api.GetKVResponse
	5, // 5: filecenter.api.FileCenter.SetKV:output_type -> share.api.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_center_proto_init() }
func file_file_center_proto_init() {
	if File_file_center_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_file_center_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_center_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_center_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_center_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKVResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_center_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_center_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_center_proto_goTypes,
		DependencyIndexes: file_file_center_proto_depIdxs,
		MessageInfos:      file_file_center_proto_msgTypes,
	}.Build()
	File_file_center_proto = out.File
	file_file_center_proto_rawDesc = nil
	file_file_center_proto_goTypes = nil
	file_file_center_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileCenterClient is the client API for FileCenter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileCenterClient interface {
	UpdateFile(ctx context.Context, in *UpdateFileRequest, opts ...grpc.CallOption) (*UpdateFileResponse, error)
	GetKV(ctx context.Context, in *GetKVRequest, opts ...grpc.CallOption) (*GetKVResponse, error)
	SetKV(ctx context.Context, in *SetKVRequest, opts ...grpc.CallOption) (*__proto_target__go.Empty, error)
}

type fileCenterClient struct {
	cc grpc.ClientConnInterface
}

func NewFileCenterClient(cc grpc.ClientConnInterface) FileCenterClient {
	return &fileCenterClient{cc}
}

func (c *fileCenterClient) UpdateFile(ctx context.Context, in *UpdateFileRequest, opts ...grpc.CallOption) (*UpdateFileResponse, error) {
	out := new(UpdateFileResponse)
	err := c.cc.Invoke(ctx, "/filecenter.api.FileCenter/UpdateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCenterClient) GetKV(ctx context.Context, in *GetKVRequest, opts ...grpc.CallOption) (*GetKVResponse, error) {
	out := new(GetKVResponse)
	err := c.cc.Invoke(ctx, "/filecenter.api.FileCenter/GetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCenterClient) SetKV(ctx context.Context, in *SetKVRequest, opts ...grpc.CallOption) (*__proto_target__go.Empty, error) {
	out := new(__proto_target__go.Empty)
	err := c.cc.Invoke(ctx, "/filecenter.api.FileCenter/SetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileCenterServer is the server API for FileCenter service.
type FileCenterServer interface {
	UpdateFile(context.Context, *UpdateFileRequest) (*UpdateFileResponse, error)
	GetKV(context.Context, *GetKVRequest) (*GetKVResponse, error)
	SetKV(context.Context, *SetKVRequest) (*__proto_target__go.Empty, error)
}

// UnimplementedFileCenterServer can be embedded to have forward compatible implementations.
type UnimplementedFileCenterServer struct {
}

func (*UnimplementedFileCenterServer) UpdateFile(context.Context, *UpdateFileRequest) (*UpdateFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFile not implemented")
}
func (*UnimplementedFileCenterServer) GetKV(context.Context, *GetKVRequest) (*GetKVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKV not implemented")
}
func (*UnimplementedFileCenterServer) SetKV(context.Context, *SetKVRequest) (*__proto_target__go.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetKV not implemented")
}

func RegisterFileCenterServer(s *grpc.Server, srv FileCenterServer) {
	s.RegisterService(&_FileCenter_serviceDesc, srv)
}

func _FileCenter_UpdateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCenterServer).UpdateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecenter.api.FileCenter/UpdateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCenterServer).UpdateFile(ctx, req.(*UpdateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCenter_GetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCenterServer).GetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecenter.api.FileCenter/GetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCenterServer).GetKV(ctx, req.(*GetKVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCenter_SetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetKVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCenterServer).SetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecenter.api.FileCenter/SetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCenterServer).SetKV(ctx, req.(*SetKVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileCenter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filecenter.api.FileCenter",
	HandlerType: (*FileCenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateFile",
			Handler:    _FileCenter_UpdateFile_Handler,
		},
		{
			MethodName: "GetKV",
			Handler:    _FileCenter_GetKV_Handler,
		},
		{
			MethodName: "SetKV",
			Handler:    _FileCenter_SetKV_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file_center.proto",
}
